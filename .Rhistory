load("C:/Users/ramc_/Documents/Proyectos R/Elecciones Presidenciales 2021/.RData")
View(token)
library(rtweet)
joseantonio <- get_timeline(user = "@joseantoniokast", n = n, parse = TRUE,
check = TRUE, include_rts = FALSE)
n = 3200
joseantonio <- get_timeline(user = "@joseantoniokast", n = n, parse = TRUE,
check = TRUE, include_rts = FALSE)
joseantonio <- get_timeline(user = "@gabrielboric", n = n, parse = TRUE,
check = TRUE, include_rts = FALSE)
boric - joseantonio
boric <- joseantonio
rm(joseantonio)
#Columnas disponibles
colnames(boric) %>% view()
library(utils)
#Columnas disponibles
colnames(boric) %>% view()
library(utils)
#Columnas disponibles
colnames(boric) %>% view()
#Columnas disponibles
colnames(boric) %>% view(.)
#Columnas disponibles
colnames(boric) %>% view()
head(boric)
View(boric)
#Columnas disponibles
colnames(tweets) %>% view()
#Columnas disponibles
colnames() %>% view(boric)
#Columnas disponibles
colnames() %>% view(, boric)
#Columnas disponibles
colnames(boric)
#Columnas disponibles
view(boric, colnames())
tweets <- get_timeline(user = "@gabrielboric", n = n, parse = TRUE,
check = TRUE, include_rts = FALSE)
rm(boric)
boric <- tweets
#Selección de variables
tweets <- tweets %>% select(screen_name, created_at, status_id, text)
#Se renombran las variables con nombres más prácticos
tweets <- tweets %>% rename(autor = screen_name, fecha = created_at,
texto = text, tweet_id = status_id)
library(dplyr)
#Selección de variables
tweets <- tweets %>% select(screen_name, created_at, status_id, text)
#Se renombran las variables con nombres más prácticos
tweets <- tweets %>% rename(autor = screen_name, fecha = created_at,
texto = text, tweet_id = status_id)
#### Limpieza de texto y tokenización ####
limpiar_tokenizar <- function(texto){
# El orden de la limpieza no es arbitrario
# Se convierte todo el texto a minúsculas
nuevo_texto <- tolower(texto)
# Eliminación de páginas web (palabras que empiezan por "http." seguidas
# de cualquier cosa que no sea un espacio)
nuevo_texto <- str_replace_all(nuevo_texto,"http\\S*", "")
# Eliminación de signos de puntuación
nuevo_texto <- str_replace_all(nuevo_texto,"[[:punct:]]", " ")
# Eliminación de números
nuevo_texto <- str_replace_all(nuevo_texto,"[[:digit:]]", " ")
# Eliminación de espacios en blanco múltiples
nuevo_texto <- str_replace_all(nuevo_texto,"[\\s]+", " ")
# Tokenización por palabras individuales
nuevo_texto <- str_split(nuevo_texto, " ")[[1]]
# Eliminación de tokens con una longitud < 2
nuevo_texto <- keep(.x = nuevo_texto, .p = function(x){str_length(x) > 1})
return(nuevo_texto)
}
library(tm)
MC_tokenizer(tweets$texto)
tweets$texto <- MC_tokenizer(tweets$texto)
